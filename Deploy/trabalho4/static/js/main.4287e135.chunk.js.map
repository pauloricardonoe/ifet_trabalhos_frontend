{"version":3,"sources":["themes.js","App.js","reportWebVitals.js","index.js"],"names":["light","bodyBackgroundColor","h1Color","inputBackgroundColor","inputColor","buttonBackgroudColor","buttonCollor","dark","Estilo","createGlobalStyle","props","theme","App","ChangeTheme","event","state","setState","className","this","type","defaultValue","onClick","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAaA,EAAQ,CACnBC,oBAAqB,QACrBC,QAAS,QACTC,qBAAsB,QACtBC,WAAY,UACZC,qBAAsB,OACtBC,aAAc,QAGHC,EAAO,CAClBN,oBAAqB,UACrBC,QAAS,QACTC,qBAAsB,UACtBC,WAAY,QACZC,qBAAsB,OACtBC,aAAc,Q,qXCVT,IAAME,EAASC,YAAH,KAEH,SAAAC,GAAK,OAAIA,EAAMC,MAAMV,uBAKxB,SAAAS,GAAK,OAAIA,EAAMC,MAAMT,WAKZ,SAAAQ,GAAK,OAAIA,EAAMC,MAAMN,wBAChC,SAAAK,GAAK,OAAIA,EAAMC,MAAML,gBAKV,SAAAI,GAAK,OAAIA,EAAMC,MAAMR,wBAChC,SAAAO,GAAK,OAAIA,EAAMC,MAAMP,cAuCjBQ,E,kDAhCb,WAAYF,GAAQ,IAAD,8BACjB,cAAMA,IAORG,YAAc,SAACC,GACY,UAArB,EAAKC,MAAMJ,MACb,EAAKK,SAAS,CAACL,MAAO,SACnB,EAAKK,SAAS,CAACL,MAAO,WAR3B,EAAKI,MAAQ,CACXJ,MAAO,SAJQ,E,qDAgBjB,OACE,qBAAKM,UAAU,MAAf,SACE,eAAC,IAAD,CAAeN,MAA4B,UAArBO,KAAKH,MAAMJ,MAAoBX,EAAQO,EAA7D,UACE,cAACC,EAAD,IACA,sBAAKS,UAAU,aAAf,UACE,uBAAOE,KAAK,SAASC,aAAcF,KAAKH,MAAMJ,MAAOU,QAASH,KAAKL,cACnE,oDACA,uBAAOM,KAAK,SACZ,uBAAOA,KAAK,SAASC,aAAa,wB,GA1B5BE,aCjBHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4287e135.chunk.js","sourcesContent":["export const light = {\r\n  bodyBackgroundColor: 'white',\r\n  h1Color: 'black',\r\n  inputBackgroundColor: ' #fff',\r\n  inputColor: '#495057',\r\n  buttonBackgroudColor: '#000',\r\n  buttonCollor: '#fff'\r\n}\r\n\r\nexport const dark = {\r\n  bodyBackgroundColor: '#343a40',\r\n  h1Color: 'white',\r\n  inputBackgroundColor: '#495057',\r\n  inputColor: ' #fff',\r\n  buttonBackgroudColor: '#fff',\r\n  buttonCollor: '#000'\r\n}","import * as React from \"react\";\nimport {ThemeProvider} from \"styled-components\";\nimport {createGlobalStyle} from \"styled-components\"\nimport {dark, light} from \"./themes\";\n\nexport const Estilo = createGlobalStyle`\nbody{\n  background: ${props => props.theme.bodyBackgroundColor};\n  transition: all 0.30s linear;\n}\n\nh1 {\n    color: ${props => props.theme.h1Color};\n    transition: all 0.30s linear;  \n  }\n\ninput[type=button]{\n  background-color: ${props => props.theme.buttonBackgroudColor};\n  color: ${props => props.theme.buttonCollor};\n  font-size: 30px;\n}\n\ninput[type=text]{\n  background-color: ${props => props.theme.inputBackgroundColor};\n  color: ${props => props.theme.inputColor};\n  font-size: 30px;\n}\n`;\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      theme: \"light\"\n    }\n  }\n\n  ChangeTheme = (event) => {\n    if (this.state.theme === 'light')\n      this.setState({theme: 'dark'})\n    else this.setState({theme: 'light'})\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={this.state.theme === 'light' ? light : dark}>\n          <Estilo/>\n          <div className=\"Cxprincpal\">\n            <input type=\"button\" defaultValue={this.state.theme} onClick={this.ChangeTheme}/>\n            <h1>Preencha seu Email</h1>\n            <input type=\"text\"/>\n            <input type=\"Button\" defaultValue=\"Assinar\"/>\n          </div>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}